
--[[
AztupBrew(Fork of IronBrew2): obfuscation; Version 2.7.2
]]
return(function(Cool_i,Cool_a,Cool_a)local Cool_k=string.char;local Cool_e=string.sub;local Cool_m=table.concat;local Cool_n=math.ldexp;local Cool_o=getfenv or function()return _ENV end;local Cool_l=select;local Cool_g=unpack or table.unpack;local Cool_j=tonumber;local function Cool_p(Cool_h)local Cool_b,Cool_c,Cool_f="","",{}local Cool_d=256;local Cool_g={}for Cool_a=0,Cool_d-1 do Cool_g[Cool_a]=Cool_k(Cool_a)end;local Cool_a=1;local function Cool_i()local Cool_b=Cool_j(Cool_e(Cool_h,Cool_a,Cool_a),36)Cool_a=Cool_a+1;local Cool_c=Cool_j(Cool_e(Cool_h,Cool_a,Cool_a+Cool_b-1),36)Cool_a=Cool_a+Cool_b;return Cool_c end;Cool_b=Cool_k(Cool_i())Cool_f[1]=Cool_b;while Cool_a<#Cool_h do local Cool_a=Cool_i()if Cool_g[Cool_a]then Cool_c=Cool_g[Cool_a]else Cool_c=Cool_b..Cool_e(Cool_b,1,1)end;Cool_g[Cool_d]=Cool_b..Cool_e(Cool_c,1,1)Cool_f[#Cool_f+1],Cool_b,Cool_d=Cool_c,Cool_c,Cool_d+1 end;return table.concat(Cool_f)end;local Cool_j=Cool_p('191D2751E172751D22P22Q23022X23I23D23J22S22R22Y1E27427522Y23022O22W1E1A27921X23D23D23H22222W23D1E21Y27922T27W23H23I21J1Y1Y23J23023E1Z22Y22S23D22T23C23323C23I22W23J23222Q22R23D22W28S1Z28Q22O1Y22N22W28Q23F28O2381W28Q22X28O1Y23C22S1Y22O23027I29D22W23I23I23022Y22W21421R21P21121R21O2101Z23D23923D279275152791V27M1D1C2A22752A61F2792192A82A51D1E1D1V2761D2A42792A62AG29Z2AP2AA2AP2A62A62AS279');local Cool_a=(bit or bit32);local Cool_d=Cool_a and Cool_a.bxor or function(Cool_a,Cool_b)local Cool_c,Cool_d,Cool_e=1,0,10 while Cool_a>0 and Cool_b>0 do local Cool_e,Cool_f=Cool_a%2,Cool_b%2 if Cool_e~=Cool_f then Cool_d=Cool_d+Cool_c end Cool_a,Cool_b,Cool_c=(Cool_a-Cool_e)/2,(Cool_b-Cool_f)/2,Cool_c*2 end if Cool_a<Cool_b then Cool_a=Cool_b end while Cool_a>0 do local Cool_b=Cool_a%2 if Cool_b>0 then Cool_d=Cool_d+Cool_c end Cool_a,Cool_c=(Cool_a-Cool_b)/2,Cool_c*2 end return Cool_d end local function Cool_c(Cool_b,Cool_a,Cool_c)if Cool_c then local Cool_a=(Cool_b/2^(Cool_a-1))%2^((Cool_c-1)-(Cool_a-1)+1);return Cool_a-Cool_a%1;else local Cool_a=2^(Cool_a-1);return(Cool_b%(Cool_a+Cool_a)>=Cool_a)and 1 or 0;end;end;local Cool_a=1;local function Cool_b()local Cool_c,Cool_e,Cool_f,Cool_b=Cool_i(Cool_j,Cool_a,Cool_a+3);Cool_c=Cool_d(Cool_c,13)Cool_e=Cool_d(Cool_e,13)Cool_f=Cool_d(Cool_f,13)Cool_b=Cool_d(Cool_b,13)Cool_a=Cool_a+4;return(Cool_b*16777216)+(Cool_f*65536)+(Cool_e*256)+Cool_c;end;local function Cool_h()local Cool_b=Cool_d(Cool_i(Cool_j,Cool_a,Cool_a),13);Cool_a=Cool_a+1;return Cool_b;end;local function Cool_f()local Cool_b,Cool_c=Cool_i(Cool_j,Cool_a,Cool_a+2);Cool_b=Cool_d(Cool_b,13)Cool_c=Cool_d(Cool_c,13)Cool_a=Cool_a+2;return(Cool_c*256)+Cool_b;end;local function Cool_q()local Cool_d=Cool_b();local Cool_a=Cool_b();local Cool_e=1;local Cool_d=(Cool_c(Cool_a,1,20)*(2^32))+Cool_d;local Cool_b=Cool_c(Cool_a,21,31);local Cool_a=((-1)^Cool_c(Cool_a,32));if(Cool_b==0)then if(Cool_d==0)then return Cool_a*0;else Cool_b=1;Cool_e=0;end;elseif(Cool_b==2047)then return(Cool_d==0)and(Cool_a*(1/0))or(Cool_a*(0/0));end;return Cool_n(Cool_a,Cool_b-1023)*(Cool_e+(Cool_d/(2^52)));end;local Cool_p=Cool_b;local function Cool_n(Cool_b)local Cool_c;if(not Cool_b)then Cool_b=Cool_p();if(Cool_b==0)then return'';end;end;Cool_c=Cool_e(Cool_j,Cool_a,Cool_a+Cool_b-1);Cool_a=Cool_a+Cool_b;local Cool_b={}for Cool_a=1,#Cool_c do Cool_b[Cool_a]=Cool_k(Cool_d(Cool_i(Cool_e(Cool_c,Cool_a,Cool_a)),13))end return Cool_m(Cool_b);end;local Cool_a=Cool_b;local function Cool_m(...)return{...},Cool_l('#',...)end local function Cool_j()local Cool_i={};local Cool_d={};local Cool_a={};local Cool_k={[#{"1 + 1 = 111";"1 + 1 = 111";}]=Cool_d,[#{"1 + 1 = 111";"1 + 1 = 111";"1 + 1 = 111";}]=nil,[#{"1 + 1 = 111";{662;925;671;863};{503;68;329;401};{52;718;276;530};}]=Cool_a,[#{"1 + 1 = 111";}]=Cool_i,};local Cool_a=Cool_b()local Cool_e={}for Cool_c=1,Cool_a do local Cool_b=Cool_h();local Cool_a;if(Cool_b==2)then Cool_a=(Cool_h()~=0);elseif(Cool_b==0)then Cool_a=Cool_q();elseif(Cool_b==3)then Cool_a=Cool_n();end;Cool_e[Cool_c]=Cool_a;end;Cool_k[3]=Cool_h();for Cool_a=1,Cool_b()do Cool_d[Cool_a-1]=Cool_j();end;for Cool_j=1,Cool_b()do local Cool_a=Cool_h();if(Cool_c(Cool_a,1,1)==0)then local Cool_d=Cool_c(Cool_a,2,3);local Cool_g=Cool_c(Cool_a,4,6);local Cool_a={Cool_f(),Cool_f(),nil,nil};if(Cool_d==0)then Cool_a[3]=Cool_f();Cool_a[4]=Cool_f();elseif(Cool_d==1)then Cool_a[3]=Cool_b();elseif(Cool_d==2)then Cool_a[3]=Cool_b()-(2^16)elseif(Cool_d==3)then Cool_a[3]=Cool_b()-(2^16)Cool_a[4]=Cool_f();end;if(Cool_c(Cool_g,1,1)==1)then Cool_a[2]=Cool_e[Cool_a[2]]end if(Cool_c(Cool_g,2,2)==1)then Cool_a[3]=Cool_e[Cool_a[3]]end if(Cool_c(Cool_g,3,3)==1)then Cool_a[4]=Cool_e[Cool_a[4]]end Cool_i[Cool_j]=Cool_a;end end;return Cool_k;end;local function Cool_n(Cool_a,Cool_b,Cool_i)Cool_a=(Cool_a==true and Cool_j())or Cool_a;return(function(...)local Cool_f=Cool_a[1];local Cool_d=Cool_a[3];local Cool_a=Cool_a[2];local Cool_j=Cool_m local Cool_c=1;local Cool_e=-1;local Cool_m={};local Cool_h={...};local Cool_k=Cool_l('#',...)-1;local Cool_a={};local Cool_b={};for Cool_a=0,Cool_k do if(Cool_a>=Cool_d)then Cool_m[Cool_a-Cool_d]=Cool_h[Cool_a+1];else Cool_b[Cool_a]=Cool_h[Cool_a+#{"1 + 1 = 111";}];end;end;local Cool_a=Cool_k-Cool_d+1 local Cool_a;local Cool_d;while true do Cool_a=Cool_f[Cool_c];Cool_d=Cool_a[1];if Cool_d<=6 then if Cool_d<=2 then if Cool_d<=0 then Cool_b[Cool_a[2]]=Cool_a[3];elseif Cool_d>1 then do return end;else local Cool_c=Cool_a[2];local Cool_d=Cool_b[Cool_a[3]];Cool_b[Cool_c+1]=Cool_d;Cool_b[Cool_c]=Cool_d[Cool_a[4]];end;elseif Cool_d<=4 then if Cool_d==3 then Cool_b[Cool_a[2]]=Cool_i[Cool_a[3]];else local Cool_h;local Cool_m,Cool_l;local Cool_k;local Cool_d;Cool_b[Cool_a[2]]=Cool_i[Cool_a[3]];Cool_c=Cool_c+1;Cool_a=Cool_f[Cool_c];Cool_b[Cool_a[2]]=Cool_i[Cool_a[3]];Cool_c=Cool_c+1;Cool_a=Cool_f[Cool_c];Cool_d=Cool_a[2];Cool_k=Cool_b[Cool_a[3]];Cool_b[Cool_d+1]=Cool_k;Cool_b[Cool_d]=Cool_k[Cool_a[4]];Cool_c=Cool_c+1;Cool_a=Cool_f[Cool_c];Cool_b[Cool_a[2]]=Cool_a[3];Cool_c=Cool_c+1;Cool_a=Cool_f[Cool_c];Cool_d=Cool_a[2]Cool_m,Cool_l=Cool_j(Cool_b[Cool_d](Cool_g(Cool_b,Cool_d+1,Cool_a[3])))Cool_e=Cool_l+Cool_d-1 Cool_h=0;for Cool_a=Cool_d,Cool_e do Cool_h=Cool_h+1;Cool_b[Cool_a]=Cool_m[Cool_h];end;Cool_c=Cool_c+1;Cool_a=Cool_f[Cool_c];Cool_d=Cool_a[2]Cool_b[Cool_d]=Cool_b[Cool_d](Cool_g(Cool_b,Cool_d+1,Cool_e))Cool_c=Cool_c+1;Cool_a=Cool_f[Cool_c];Cool_b[Cool_a[2]]();Cool_c=Cool_c+1;Cool_a=Cool_f[Cool_c];do return end;end;elseif Cool_d>5 then Cool_b[Cool_a[2]]();else local Cool_c=Cool_a[2]local Cool_d,Cool_a=Cool_j(Cool_b[Cool_c](Cool_g(Cool_b,Cool_c+1,Cool_a[3])))Cool_e=Cool_a+Cool_c-1 local Cool_a=0;for Cool_c=Cool_c,Cool_e do Cool_a=Cool_a+1;Cool_b[Cool_c]=Cool_d[Cool_a];end;end;elseif Cool_d<=10 then if Cool_d<=8 then if Cool_d>7 then local Cool_c=Cool_a[2]local Cool_d,Cool_a=Cool_j(Cool_b[Cool_c](Cool_g(Cool_b,Cool_c+1,Cool_a[3])))Cool_e=Cool_a+Cool_c-1 local Cool_a=0;for Cool_c=Cool_c,Cool_e do Cool_a=Cool_a+1;Cool_b[Cool_c]=Cool_d[Cool_a];end;else local Cool_c=Cool_a[2];local Cool_d=Cool_b[Cool_a[3]];Cool_b[Cool_c+1]=Cool_d;Cool_b[Cool_c]=Cool_d[Cool_a[4]];end;elseif Cool_d>9 then do return end;else Cool_b[Cool_a[2]]=Cool_i[Cool_a[3]];end;elseif Cool_d<=12 then if Cool_d>11 then Cool_b[Cool_a[2]]();else Cool_b[Cool_a[2]]=Cool_a[3];end;elseif Cool_d>13 then local Cool_a=Cool_a[2]Cool_b[Cool_a]=Cool_b[Cool_a](Cool_g(Cool_b,Cool_a+1,Cool_e))else local Cool_a=Cool_a[2]Cool_b[Cool_a]=Cool_b[Cool_a](Cool_g(Cool_b,Cool_a+1,Cool_e))end;Cool_c=Cool_c+1;end;end);end;return Cool_n(true,{},Cool_o())();end)(string.byte,table.insert,setmetatable);
